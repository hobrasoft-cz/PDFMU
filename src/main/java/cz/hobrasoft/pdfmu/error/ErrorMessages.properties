PARSER_UNKNOWN=Unknown argument parser error.
PARSER_UNRECOGNIZED_ARGUMENT=Unrecognized argument: "${argument}"
PARSER_INVALID_CHOICE=Invalid choice "${choice}" of option ${argument}. Valid choices: ${validChoices}
PARSER_UNRECOGNIZED_COMMAND=Unrecognized command: "${command}". Valid commands: ${validCommands}
PARSER_TOO_FEW_ARGUMENTS=Too few arguments
PARSER_EXPECTED_ONE_ARGUMENT=Argument ${argument} expects a value.

INPUT_NOT_FOUND=The input file "${file}" was not found.
INPUT_NOT_VALID_PDF=The input file "${file}" is not a valid PDF document.
INPUT_CLOSE=Could not close the input stream.

OUTPUT_NOT_SPECIFIED=Output file has not been specified.
OUTPUT_EXISTS_FORCE_NOT_SET=The output file "${outputFile}" already exists. Set --force flag to overwrite.
OUTPUT_OPEN=Could not open the output file "${outputFile}" for writing.
OUTPUT_STAMPER_OPEN=Could not open the PDF stamper.
OUTPUT_STAMPER_CLOSE=Could not close the PDF stamper.
OUTPUT_CLOSE=Could not close the output file "${outputFile}".
OUTPUT_WRITE=Could not write the processed document to the output file "${outputFile}".

SIGNATURE_ADD_KEYSTORE_TYPE_UNSUPPORTED=None of the registered security providers supports the keystore type ${type}.
SIGNATURE_ADD_KEYSTORE_FILE_NOT_SPECIFIED=Keystore file not set but required for the keystore type ${type}. Use the option --keystore.
SIGNATURE_ADD_KEYSTORE_FILE_OPEN=Could not open the keystore file "${file}".
SIGNATURE_ADD_KEYSTORE_LOAD=Could not load the keystore.
SIGNATURE_ADD_KEYSTORE_FILE_CLOSE=Could not close the keystore file "${file}".

SIGNATURE_ADD_KEYSTORE_ALIASES=Could not get aliases from the keystore.
SIGNATURE_ADD_KEYSTORE_EMPTY=Keystore is empty (no aliases).
SIGNATURE_ADD_KEYSTORE_ALIAS_MISSING=Keystore does not contain the alias "${alias}".
SIGNATURE_ADD_KEYSTORE_ALIAS_EXCEPTION=Could not determine whether the keystore contains the alias "${alias}".
SIGNATURE_ADD_KEYSTORE_ALIAS_NOT_KEY=The keystore entry associated with the alias "${alias}" is not a key entry.
SIGNATURE_ADD_KEYSTORE_ALIAS_KEY_EXCEPTION=Could not determine whether the keystore entry "${alias}" is a key.
SIGNATURE_ADD_KEYSTORE_PRIVATE_KEY=Could not get private key from keystore.
SIGNATURE_ADD_KEYSTORE_CERTIFICATE_CHAIN=Could not get certificate chain from keystore.
SIGNATURE_ADD_SIGNATURE_EXCEPTION=Could not sign the document. Have you enabled the access to the given certificate?

SIGNATURE_ADD_UNSUPPORTED_DIGEST_ALGORITHM=The digest algorithm "${digestAlgorithm}" is not supported.
SIGNATURE_ADD_FAIL=Could not sign the document due to an unknown error.
SIGNATURE_ADD_TSA_UNTRUSTED=The timestamp authority is not trusted. Add one of the public certificates of the TSA certificate chain to the TrustStore.
SIGNATURE_ADD_TSA_UNAUTHORIZED=The timestamp authority requires user authentication. Use the options --tsa-username and --tsa-password or --tsa-password-envvar.
SIGNATURE_ADD_TSA_LOGIN_FAIL=The timestamp authority refused the login credentials.
SIGNATURE_ADD_TSA_UNREACHABLE=Could not reach the TSA host "${host}". Is the URL correct? Are you connected to the Internet?
SIGNATURE_ADD_TSA_BAD_CERTIFICATE=The timestamp authority requires authorization with a private key but no correct private key has been set. Use the option --ssl-keystore.
SIGNATURE_ADD_TSA_HANDSHAKE_FAILURE=HTTPS handshake with the TSA failed. Perhaps the authorization private key is not in the KeyStore?
SIGNATURE_ADD_TSA_SSL_HANDSHAKE_EXCEPTION=An unknown SSLHandshakeException occurred.
SIGNATURE_ADD_TSA_SSL_FATAL_ALERT=An unknown SSL handshake fatal alert occurred: ${alert}
SIGNATURE_ADD_TSA_INVALID_URL=The specified TSA URL is not valid. Configure the option --tsa-url with a valid URL.

ATTACH_FAIL=Could not attach the file "${file}".
ATTACH_ATTACHMENT_EQUALS_OUTPUT=Output document ("${outputFile}") and attachment ("${attachmentFile}") paths must differ.

SSL_TRUSTSTORE_NOT_FOUND=The TrustStore file "${location}" was not found.
SSL_TRUSTSTORE_INCORRECT_TYPE=The TrustStore or the KeyStore is of incorrect type or invalid or the password is incorrect. The KeyStore must be protected by a non-empty password. All the private keys in a JKS or JCEKS KeyStore must be protected by the same password as the KeyStore.
SSL_TRUSTSTORE_EMPTY=The TrustStore is empty or of incorrect type.
SSL_KEYSTORE_NOT_FOUND=The SSL KeyStore file "${location}" was not found.
