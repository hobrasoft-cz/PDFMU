<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cz.hobrasoft</groupId>
    <artifactId>pdfmu</artifactId>
    <version>1.1.3</version>
    <packaging>jar</packaging>
    
    <name>PDF Manipulation Utility</name>
    <description>A command line tool that makes manipulating PDF documents easy</description>
    <url>http://hobrasoft-cz.github.io/PDFMU/</url>
    <organization>
        <name>Hobrasoft s.r.o.</name>
        <url>http://www.hobrasoft.cz/</url>
    </organization>
    <developers>
        <developer>
            <id>filip.bartek</id>
            <name>Filip BÃ¡rtek</name>
            <email>filip.bartek@hobrasoft.cz</email>
            <timezone>1</timezone>
        </developer>
    </developers>
    <inceptionYear>2015</inceptionYear>
    <licenses>
        <license>
            <name>GNU Affero General Public License v3</name>
            <url>http://www.gnu.org/licenses/agpl-3.0-standalone.html</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:hobrasoft-cz/PDFMU.git</connection>
        <developerConnection>scm:git:git@github.com:hobrasoft-cz/PDFMU.git</developerConnection>
        <url>https://github.com/hobrasoft-cz/PDFMU</url>
    </scm>
    <issueManagement>
      <system>GitHub</system>
      <url>https://github.com/hobrasoft-cz/PDFMU/issues</url>
   </issueManagement>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mainClass>cz.hobrasoft.pdfmu.Main</mainClass>
        <exeLocation>exe</exeLocation>
        <exeFilename>${project.artifactId}</exeFilename>
        <!-- exeVersion must be four dot-separated digits. -->
        <exeVersion>1.1.3.0</exeVersion>
        <exeJarLocation>lib</exeJarLocation>
        <projectVersion>${project.version}</projectVersion>
        <copyright>Copyright (C) 2016 Hobrasoft s.r.o.</copyright>
        <javadocPluginVersion>2.10.3</javadocPluginVersion>
        <surefire.argLine></surefire.argLine>
        <failsafe.argLine></failsafe.argLine>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.13.1</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.62</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>1.62</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.8.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.9</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <version>2.9.9</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.13</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.19.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.java</groupId>
            <artifactId>junit-dataprovider</artifactId>
            <version>1.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <defaultGoal>package</defaultGoal>
        <pluginManagement>
            <plugins>
                
                <!-- Run `mvn site` to generate the site. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <!-- Version 3.3 and newer support Markdown. -->
                    <!-- http://illegalexception.schlichtherle.de/2013/06/17/how-to-use-markdown-syntax-with-the-maven-site-plugin/ -->
                    <version>3.4</version>
                </plugin>
                
                <!-- Run `mvn javadoc:javadoc` to generate the JavaDoc API documentation. -->
                <!-- The plugin is configured here rather than in reporting so
                as to use the same configuration for both the goals `site` and
                `javadoc:javadoc`. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadocPluginVersion}</version>
                    <configuration>
                        <links>
                            <!--
                            See option "-link" of the command "javadoc":
                            http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#bottom

                            https://maven.apache.org/plugins/maven-javadoc-plugin/examples/links-configuration.html
                            -->
                            <link>http://argparse4j.github.io/apidocs/</link>
                            <link>https://commons.apache.org/proper/commons-collections/apidocs/</link>
                        </links>
                        <notimestamp>true</notimestamp>
                        <quiet>true</quiet>
                        <locale>en_US</locale>
                        <linksource>true</linksource>
                        <!--
                        Setting source is required when building docs with JDK 11.
                        See https://bugs.openjdk.java.net/browse/JDK-8212233
                        -->
                        <source>1.7</source>
                    </configuration>
                </plugin>
                
            </plugins>
        </pluginManagement>
        
        <plugins>
            
            <!-- Generate "pom.properties" so that we can read the project version in the program. -->
            <!-- Phase: generate-resources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>generate-pom-properties</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>${project.build.outputDirectory}/pom.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Phases: compile, testCompile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            
            <!-- Add metadata to the smaller JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <classpathPrefix>${exeJarLocation}</classpathPrefix>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- Copy the dependencies -->
            <!-- Phase: package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/${exeLocation}/${exeJarLocation}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!--
                * Copy the resources [process-resources]
                * Copy the JAR [package]
            -->
            <!-- Phases: process-resources, process-test-resources, package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${exeLocation}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}.${project.packaging}</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Copy the readme file to the site source files so that a page is generated from it. -->
                        <id>copy-readme</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/site/markdown</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>README.md</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Generate the executable -->
            <!-- Phase: package -->
            <plugin>
                <!-- Inspiration: https://github.com/lukaszlenart/launch4j-maven-plugin/blob/master/src/main/resources/README.adoc#single-module-project -->
                <!-- http://illuminatedcomputing.com/code/launch4j-maven-plugin/ -->
                <!-- http://launch4j.sourceforge.net/docs.html -->
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>1.7.25</version>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase> <!-- Default: package -->
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>console</headerType>
                            <outfile>${project.build.directory}/${exeLocation}/${exeFilename}.exe</outfile>
                            <!-- `jar`: Path relative to the executable, since `dontWrapJar` is enabled -->
                            <jar>${project.build.finalName}.${project.packaging}</jar>
                            <!-- The binary will look for the JAR relative to itself. -->
                            <dontWrapJar>true</dontWrapJar>
                            <!-- errTitle is displayed in the error messages printed by Launch4j. -->
                            <errTitle>${project.name}</errTitle>
                            <!-- The program opens downloadUrl if an appropriate version of JRE is missing,
                            which can only happen if jre.minVersion is specified. -->
                            <downloadUrl>http://java.com/download</downloadUrl>
                            <!-- The program opens supportUrl in the web browser if a bundled JRE is required and missing,
                            which can only happen if jre.path is specified and jre.minVersion is not specified. -->
                            <supportUrl>${project.url}</supportUrl>
                            <jre>
                                <minVersion>1.7.0</minVersion>
                            </jre>
                            <versionInfo>
                                <fileVersion>${exeVersion}</fileVersion>
                                <txtFileVersion>${project.version}</txtFileVersion>
                                <fileDescription>${project.description}</fileDescription>
                                <copyright>${copyright}</copyright>
                                <productVersion>${exeVersion}</productVersion>
                                <txtProductVersion>${project.version}</txtProductVersion>
                                <productName>${project.name}</productName>
                                <internalName>${project.artifactId}</internalName>
                                <originalFilename>${exeFilename}.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Assemble a JAR that contains PDFMU and all of its dependencies. -->
            <!-- Run `mvn package assembly:single` to generate the JAR with dependencies. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding} @{surefire.argLine}</argLine>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding} @{failsafe.argLine}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.4</version>
                <configuration>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefire.argLine</propertyName>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <propertyName>failsafe.argLine</propertyName>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>jacoco-ut.exec</include>
                                        <include>jacoco-it.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
        
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.txt</include>
                </includes>
            </resource>
        </resources>
    </build>
    
    <reporting>
        <!-- http://www.javaworld.com/article/2071733/java-app-dev/get-the-most-out-of-maven-2-site-generation.html -->
        <plugins>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8.1</version>
            </plugin>
            
            <!-- Generate the JavaDoc API documentation. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadocPluginVersion}</version>
            </plugin>
            
            <plugin>
                <!-- http://maven.apache.org/plugins/maven-changes-plugin/ -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>2.11</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                            <!-- Add <report>github-report</report> to link to GitHub issues. -->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            
            <plugin>
                <!-- http://www.mojohaus.org/taglist-maven-plugin/faq.html#Why_do_I_get_an_error_stating_the_Taglist_plugin_must_must_be_exeucted_after_the_JXR_plugin -->
                <!-- the JXR plugin must be listed before the Taglist plugin in the POM or inherited POM reporting section. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>FIXME</displayName>
                                <tags>
                                    <tag>
                                        <matchString>FIXME</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>TODO</displayName>
                                <tags>
                                    <tag>
                                        <matchString>TODO[^\?]</matchString>
                                        <matchType>regEx</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>TODO?</displayName>
                                <tags>
                                    <tag>
                                        <matchString>TODO?</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>HACK</displayName>
                                <tags>
                                    <tag>
                                        <matchString>HACK</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>TEMP</displayName>
                                <tags>
                                    <tag>
                                        <matchString>TEMP</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.19.1</version>
            </plugin>
            
        </plugins>
    </reporting>
</project>